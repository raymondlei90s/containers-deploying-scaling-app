---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy
  namespace: bggns
  labels:
    app: bgg
    tied: app
    name: bggapp-deploy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bgg
      tied: app
      name: bggapp-po
  template:
    metadata:
      name: bggapp-po
      labels:
        app: bgg
        tied: app
        name: bggapp-po
    spec:
      containers:
        - name: bgg-app-container
          image: stackupiss/bgg-backend:v1 # TODO: Use hash instead of tag
          imagePullPolicy: IfNotPresent # Always if tag is latest
          ports:
            - containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: bgg-cm
            - secretRef:
                name: bgg-secret
          # env:
          #   - name: BGG_DB_USER
          #     valueFrom:
          #       configMapKeyRef:
          #         name: bgg-cm
          #         key: BGG_DB_USER
          #   - name: BGG_DB_HOST
          #     valueFrom:
          #       configMapKeyRef:
          #         name: bgg-cm
          #         key: BGG_DB_HOST
          #   - name: BGG_DB_PASSWORD
          #     valueFrom:
          #       secretKeyRef:
          #         name: bgg-secret
          #         key: BGG_DB_PASSWORD
          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 3000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc
  namespace: bggns
  labels:
    app: bgg
    tied: app
    name: bggapp-svc
spec:
  type: NodePort # LoadBalancer
  selector:
    app: bgg
    tied: app
    name: bggapp-po
  ports:
    - port: 3000 # Service port
      protocol: TCP
      targetPort: 3000 # Container port
      nodePort: 30000 # Only for NodePort type, Optional it will auto assign if not specified
